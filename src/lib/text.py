import re

def normalize(text: str, *, casefold: bool = True, yo2e: bool = True) -> str: 
    result = text
    result = result.replace('\t' , ' ').replace('\n', ' ').replace('\r',' ')
    if casefold == True:
        result = result.casefold()

    if yo2e == True:
        result = result.replace('–Å','–ï').replace('—ë','–µ')

    result = result.strip()
    
    if '  ' in result:
        result = result.replace('  ', '')
    
    return result


def tokenize(text: str) -> list[str]: 
    symbols = r'\w+(?:-\w+)*\b'         # /w+ (–∏—â–µ—Ç —Å–ª–æ–≤–∞) ?:-\w+ (–∏—â–µ—Ç —Å–ª–æ–≤–∞ —Å –¥–µ—Ñ–∏—Å–∞–º–∏) 
                                        # * (–Ω–æ–ª—å –∏ –±–æ–ª–µ–µ —Ä–∞–∑ –¥–µ—Ñ–∏—Å) \b (–≥—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞)
    tokens = re.findall(symbols,text)

    return tokens


def count_freq(tokens: list[str]) -> dict[str, int]:
    freq_dict = {}
    for tok in tokens:
        if tok in freq_dict:
            freq_dict[tok] += 1
        else:
            freq_dict[tok] = 1
    return freq_dict


def top_n(freq: dict[str, int], n: int = 5) -> list[tuple[str, int]]:
    
    
    items = list(freq.items())
    
   
    items.sort(key=lambda x: (-x[1], x[0]))
    
    
    return items[:n]

if __name__ == "__main__":
    print(normalize("–ü—Ä–ò–≤–ï—Ç\n–ú–ò—Ä\t"))
    print(normalize("—ë–∂–∏–∫, –Å–ª–∫–∞"))
    print(normalize("Hello\r\nWorld"))
    print(normalize("   –¥–≤–æ–π–Ω—ã–µ   –ø—Ä–æ–±–µ–ª—ã  "))
    print(tokenize('–ø—Ä–∏–≤–µ—Ç –º–∏—Ä'))
    print(tokenize('hello,world!!!'))
    print(tokenize('–ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∫—Ä—É—Ç–æ'))
    print(tokenize('2025 –≥–æ–¥'))
    print(tokenize('emoji üòÄ –Ω–µ —Å–ª–æ–≤–æ'))
    words = ["a", "b", "a", "c", "b", "a"]
    c_words = count_freq(words)
    print(c_words)
    frame = ["bb","aa","bb","aa","cc"] 
    c_frame = count_freq(frame)
    print(c_frame)
    print(top_n(c_words,2))  
    print(top_n(c_frame,2))
    













    






